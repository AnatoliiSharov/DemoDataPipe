version: "3"
services:

  broker:
    image: confluentinc/cp-kafka:7.4.1
    container_name: broker
    hostname: ${KAFKA_BROKER_HOST}
    ports:
      - ${KAFKA_BROKER_PORT}:9092
      - 9101:9101
    env_file:
      - ./kafka_broker/broker.env
    networks:
      - my-network
          
  control-center:
    container_name: control-center
    image: confluentinc/cp-enterprise-control-center:7.4.1
    hostname: ${CONTROL_CENTER_HOST}
    depends_on:
      - broker
    ports:
      - ${CONTROL_CENTER_PORT}:9021
    env_file:
      - ./kafka_monitoring/kafka_monitor.env
    networks:
      - my-network
        
  producer:
    container_name: producer
    build:
      context: ./producer
      dockerfile: Dockerfile.producer
    env_file:
      - ./producer/.env
    depends_on:
      - broker
    networks:
      - my-network
      
  database:
    container_name: database
    hostname: ${DATABASE_HOST}
    restart: always
    ports: 
      - ${DATABASE_PORT}:5432
    build: 
      context: ./database
      dockerfile: Dockerfile.database
    env_file:
      - ./database/.env
    volumes: 
      - my_postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
      
  jobmanager:
    container_name: jobmanager
    hostname: ${FLINK_JOBMANAGER_HOST}
    image: flink:1.17-scala_2.12
    depends_on:
      - database
      - broker
    ports:
      - ${FLINK_JOBMANAGER_PORT}:8081
    command: standalone-job --job-classname com.example.sharov.anatoliy.flink.DataStreamJob
    volumes:
      - ./consumer-flink-postgresql/build/libs/consumer-flink-postgresql-0.1-SNAPSHOT-all.jar:/opt/flink/usrlib/my_api.jar
    env_file:
      - ./consumer-flink-postgresql/flink-jobmanager.env
    networks:
      - my-network

  taskmanager:
    container_name: taskmanager
    hostname: ${FLINK_JOBMANAGER_HOST}
    image: flink:1.17-scala_2.12
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    volumes:
      - ./consumer-flink-postgresql/build/libs/consumer-flink-postgresql-0.1-SNAPSHOT-all.jar:/opt/flink/usrlib/my_api.jar
    env_file:
      - ./consumer-flink-postgresql/flink-taskmanager.env
    networks:
      - my-network
    
networks:
  my-network:
    driver: ${MY_NETWORK_DRIVER}   

volumes:
  my_postgres_data:
